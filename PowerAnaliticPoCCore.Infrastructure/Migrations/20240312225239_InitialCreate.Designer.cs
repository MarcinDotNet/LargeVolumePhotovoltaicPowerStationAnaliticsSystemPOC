// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PowerAnaliticPoCCore.Infrastructure.Persistance.EFRepository;

#nullable disable

namespace PowerAnaliticPoCCore.Infrastructure.Migrations
{
    [DbContext(typeof(PowerAnaliticsDBContext))]
    [Migration("20240312225239_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.2.24128.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PowerAnaliticPoCCore.Domain.PowerGenerator.PowerGenerator", b =>
                {
                    b.Property<int>("GeneratorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GeneratorId"));

                    b.Property<double>("ExpectedCurrent")
                        .HasColumnType("float");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("GeneratorId");

                    b.ToTable("PowerGenerators");
                });

            modelBuilder.Entity("PowerAnaliticPoCCore.Domain.PowerGenerator.PowerGeneratorDetailData", b =>
                {
                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("GeneratorId")
                        .HasColumnType("int");

                    b.Property<double>("CurrentProduction")
                        .HasColumnType("float");

                    b.HasKey("TimeStamp", "GeneratorId");

                    b.ToTable("PowerGeneratorDetailData");
                });

            modelBuilder.Entity("PowerAnaliticPoCCore.Domain.PowerGenerator.PowerGeneratorTimeRangeData", b =>
                {
                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(0);

                    b.Property<int>("TimeRange")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("GeneratorId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<double>("CurrentProduction")
                        .HasColumnType("float");

                    b.HasKey("TimeStamp", "TimeRange", "GeneratorId");

                    b.ToTable("PowerGeneratorTimeRangeData");
                });
#pragma warning restore 612, 618
        }
    }
}
